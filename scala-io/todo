== Document
ReadChars
WriteChars
Input
Output
Streamable (need details on how patching works)
LongTraversable
ResourceTraversable
SeqLongTraversable
Path
How to implement a new filesystem (do while creating zip FS)

== Misc
Make ReadChars use LongTraversable
Make LineTraversable a LongTraversable
Remove parameter defaults from overridden methods 
Make ResourceTraversableView's append,filter,flatmap efficient when a drop is performed after the operation
Make Codec immutable
test copy and move between filesystems
DirectoryStream to throw exceptions (NotDirectoryException perhaps)
FileOps to throw exceptions if not file (NotFileException perhaps)
use useful exceptions 1.  See java7 exceptions (can mix them in) 2.  search for all intercept[IOException] and see if there is a better way
deleteRecursively should not return tuple.  It should be a case class

== Considerations
Add protected aliasing/imports to java classes in package to reduce number or required imports
Consider adding Path implicits to a package object
Should BufferSize be a global variable? (I think probably settable.  Maybe like a logger so different situations/objects can have different sizes)
How should singly traversable streams be handled