Hi Victor,

As I state in my first (very long email) matching as you propose will not work:

Path("/home/jesse") match {
  case file:File => ...
  case dir:Directory => ...
  case _ => ...
}

This does not work for two reasons:

1.  Path's are designed to not touch the filesystem until requested in order to offer good performance on slow filesystems.  So a Path object is a Path object not a FilePath or DirectoryPath until coerced into one of those forms.
2.  A Path when created is created as a Path object not a FilePath or a DirectoryPath.  

Code Examples:
// Test if path is file or directory or does not exist
Path("home/jesse") match {
  case File(file) => // extractor resolves if it is a file
  case Directory(dir) => // same extractor does the work
  case p if(!p.exists) => // doesn't yet exist
  case _ => // oog
}

// Create File

Path("/tmp/file1").createFile()    // there are default params so () is required
Path("/tmp/dir").createDirectory() // there are default params so () is required